{"ast":null,"code":"var _jsxFileName = \"/Users/park/Documents/react/react-masterclass/src/components/ToDoList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport { atom, useRecoilState } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst toDoState = atom({\n  key: \"toDo\",\n  default: []\n});\n\nfunction ToDoList() {\n  _s();\n\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const {\n    register,\n    handleSubmit,\n    setValue\n  } = useForm();\n\n  const handleValid = data => {\n    console.log(\"add to do\", data.toDo);\n    toDos.push();\n    setValue(\"toDo\", \"\");\n  };\n\n  console.log(toDos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Dos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleValid),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"toDo\", {\n          required: \"Please write a To Do\"\n        }),\n        placeholder: \"Write a to do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: toDos.map(toDo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: toDo.text\n      }, toDo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ToDoList, \"T9EIhkA4ETMkuM/tZs/felGzxhM=\", false, function () {\n  return [useRecoilState, useForm];\n});\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/park/Documents/react/react-masterclass/src/components/ToDoList.tsx"],"names":["useForm","atom","useRecoilState","toDoState","key","default","ToDoList","toDos","setToDos","register","handleSubmit","setValue","handleValid","data","console","log","toDo","push","required","map","text","id"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,IAAT,EAAeC,cAAf,QAAqC,QAArC;;AAYA,MAAMC,SAAS,GAAGF,IAAI,CAAU;AAC9BG,EAAAA,GAAG,EAAE,MADyB;AAE9BC,EAAAA,OAAO,EAAE;AAFqB,CAAV,CAAtB;;AAKA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,cAAc,CAACC,SAAD,CAAxC;AACA,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAuCX,OAAO,EAApD;;AACA,QAAMY,WAAW,GAAIC,IAAD,IAAiB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAI,CAACG,IAA9B;AACAT,IAAAA,KAAK,CAACU,IAAN;AACAN,IAAAA,QAAQ,CAAC,MAAD,EAAS,EAAT,CAAR;AACD,GAJD;;AAKAG,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,sBACI;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAM,MAAA,QAAQ,EAAEG,YAAY,CAACE,WAAD,CAA5B;AAAA,8BACE,sBACQH,QAAQ,CAAC,MAAD,EAAS;AACnBS,UAAAA,QAAQ,EAAE;AADS,SAAT,CADhB;AAII,QAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAYE;AAAA,gBACGX,KAAK,CAACY,GAAN,CAAWH,IAAD,iBACP;AAAA,kBAAmBA,IAAI,CAACI;AAAxB,SAASJ,IAAI,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA,cADH;AADH;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBD;;GA7BQf,Q;UACmBJ,c,EACmBF,O;;;KAFtCM,Q;AA+BT,eAAeA,QAAf","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { atom, useRecoilState } from \"recoil\";\n\ninterface IForm {\n  toDo: string;\n}\n\ninterface IToDo {\n  text: string;\n  category: \"TO_DO\" | \"DOING\" | \"DONE\";\n}\n\n\nconst toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n});\n\nfunction ToDoList() {\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = (data: IForm) => {\n    console.log(\"add to do\", data.toDo);\n    toDos.push()\n    setValue(\"toDo\", \"\");\n  };\n  console.log(toDos);\n  return (\n      <div>\n        <h1>To Dos</h1>\n        <hr />\n        <form onSubmit={handleSubmit(handleValid)}>\n          <input\n              {...register(\"toDo\", {\n                required: \"Please write a To Do\",\n              })}\n              placeholder=\"Write a to do\"\n          />\n          <button>Add</button>\n        </form>\n        <ul>\n          {toDos.map((toDo) => (\n              <li key={toDo.id}>{toDo.text}</li>\n          ))}\n        </ul>\n      </div>\n  );\n}\n\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}