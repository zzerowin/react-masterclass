{"ast":null,"code":"var _jsxFileName = \"/Users/park/Documents/react/react-masterclass/react-masterclass-trello/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { useRecoilState } from \"recoil\";\nimport { toDoState } from \"./atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  max-width: 480px;\n  width: 100%;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n_c = Wrapper;\nconst Boards = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: repeat(1, 1fr);\n`;\n_c2 = Boards;\nconst Board = styled.div`\n  padding: 20px 10px;\n  padding-top: 30px;\n  background-color: ${props => props.theme.bordColor};\n  border-radius: 5px;\n  min-height: 200px;\n`;\n_c3 = Board;\nconst Card = styled.div`\n  border-radius: 5px;\n  margin-bottom: 5px;\n  padding: 10px 10px;\n  background-color: ${props => props.theme.cardColor};\n`;\n_c4 = Card;\n\nfunction App() {\n  _s();\n\n  const [toDos, setToDos] = useRecoilState(toDoState);\n\n  const onDragEnd = _ref => {\n    let {\n      draggableId,\n      destination,\n      source\n    } = _ref;\n    if (!destination) return;\n    setToDos(oldToDos => {\n      const toDosCopy = [...oldToDos]; // 1) Delete item on source.index\n\n      console.log(\"Delete item on\", source.index);\n      console.log(toDosCopy);\n      toDosCopy.splice(source.index, 1);\n      console.log(\"Deleted item\");\n      console.log(toDosCopy); // 2) Put back the item on the destination.index\n\n      console.log(\"Put back\", draggableId, \"on \", destination.index);\n      toDosCopy.splice(destination === null || destination === void 0 ? void 0 : destination.index, 0, draggableId);\n      console.log(toDosCopy);\n      return toDosCopy;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Boards, {\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"one\",\n          children: magic => /*#__PURE__*/_jsxDEV(Board, {\n            ref: magic.innerRef,\n            ...magic.droppableProps,\n            children: [toDos.map((toDo, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: toDo,\n              index: index,\n              children: magic => /*#__PURE__*/_jsxDEV(Card, {\n                ref: magic.innerRef,\n                ...magic.dragHandleProps,\n                ...magic.draggableProps,\n                children: toDo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 31\n              }, this)\n            }, toDo, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)), magic.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"5a67h5XNEBDPty+W6+XWtUnHNYw=\", false, function () {\n  return [useRecoilState];\n});\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Boards\");\n$RefreshReg$(_c3, \"Board\");\n$RefreshReg$(_c4, \"Card\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/Users/park/Documents/react/react-masterclass/react-masterclass-trello/src/App.tsx"],"names":["DragDropContext","Draggable","Droppable","styled","useRecoilState","toDoState","Wrapper","div","Boards","Board","props","theme","bordColor","Card","cardColor","App","toDos","setToDos","onDragEnd","draggableId","destination","source","oldToDos","toDosCopy","console","log","index","splice","magic","innerRef","droppableProps","map","toDo","dragHandleProps","draggableProps","placeholder"],"mappings":"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","sourcesContent":["import {DragDropContext, Draggable, Droppable, DropResult} from \"react-beautiful-dnd\"\nimport styled from \"styled-components\";\nimport {useRecoilState} from \"recoil\";\nimport {toDoState} from \"./atoms\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  max-width: 480px;\n  width: 100%;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst Boards = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: repeat(1, 1fr);\n`;\n\n\nconst Board = styled.div`\n  padding: 20px 10px;\n  padding-top: 30px;\n  background-color: ${props => props.theme.bordColor};\n  border-radius: 5px;\n  min-height: 200px;\n`;\n\nconst Card = styled.div`\n  border-radius: 5px;\n  margin-bottom: 5px;\n  padding: 10px 10px;\n  background-color: ${props => props.theme.cardColor};\n`;\n\n\nfunction App() {\n  const [toDos, setToDos] = useRecoilState(toDoState)\n  const onDragEnd = ({ draggableId, destination, source }: DropResult) => {\n    if (!destination) return;\n    setToDos((oldToDos) => {\n      const toDosCopy = [...oldToDos];\n      // 1) Delete item on source.index\n      console.log(\"Delete item on\", source.index);\n      console.log(toDosCopy);\n      toDosCopy.splice(source.index, 1);\n      console.log(\"Deleted item\");\n      console.log(toDosCopy);\n      // 2) Put back the item on the destination.index\n      console.log(\"Put back\", draggableId, \"on \", destination.index);\n      toDosCopy.splice(destination?.index, 0, draggableId);\n      console.log(toDosCopy);\n      return toDosCopy;\n    });\n  };\n\n  return (\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Wrapper>\n          <Boards>\n            <Droppable droppableId=\"one\">\n              {(magic) => (\n                  <Board ref={magic.innerRef} {...magic.droppableProps}>\n                    {toDos.map((toDo, index) => (\n                        <Draggable key={toDo} draggableId={toDo} index={index}>\n                          {(magic) => (\n                              <Card\n                                  ref={magic.innerRef}\n                                  {...magic.dragHandleProps}\n                                  {...magic.draggableProps}\n                              >\n                                {toDo}\n                              </Card>\n                          )}\n                        </Draggable>\n                    ))}\n                    {magic.placeholder}\n                  </Board>\n              )}\n            </Droppable>\n          </Boards>\n        </Wrapper>\n      </DragDropContext>\n  );\n\n}\n\nexport default App\n\n\n"]},"metadata":{},"sourceType":"module"}